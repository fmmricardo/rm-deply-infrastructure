# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  destroy_environment:
      parameters:
        when_to_run:
          type: string
          default: "on_fail"
      steps:
        - run:
            name: Destroy environement
            command: |
              aws cloudformation delete-stack \
                --stack-name prod-${CIRCLE_WORKFLOW_ID}
            when: << parameters.when_to_run >>
  
jobs:

  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Stack
          command: |
            aws cloudformation deploy \
              --template-file rm-infra.yml \
              --stack-name prod-${CIRCLE_WORKFLOW_ID}

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test.
          command: |
            URL="https://blog.udacity.com/"
            if curl -s --head ${URL} # test if blog.udacity. com exists
            then
             return 0
            else
             return 1
            fi
      - destroy_environment
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test.
          command: |
            URL="https://blog.udacity.com/"
            if curl -s --head ${URL} # test if blog.udacity. com exists
            then
             return 0
            else
             return 1
            fi
      - destroy_environment

        # configure_infrastructure:
        #   docker:
        #     - image: python:3.7-alpine3.11 
        #   steps:
             # not working, need to see why it stop on the EC2 access
             # hint: Pub key with invalid format
             # - checkout
             # - add_ssh_keys:
             #     fingerprints: ['20:a2:3d:4b:bd:2e:79:a2:6c:44:73:40:9a:d7:87:7a']

             # - run: 
             #     name: Install dependencies 
             #     command: |
             #       apk add --update ansible 
             # - run:
             #     name: Configure server
             #     command: |
             #       ansible-playbook -i inventory main.yml
workflows:
  my_workflow:
    jobs:
      - create_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure
